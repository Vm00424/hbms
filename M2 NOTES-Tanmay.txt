inside an interface-public static final
== checks for object reference address.

string A="chandan"
string B="chandan"

A==B is valid

default access specifier is always for the same package.

we can invoke the base class constructtor using

string name="chandan"
name="shyam"

2objects 1 ref var

What are the object class methods?
The Methods of java.lang.Object
public Object()
 getClass()
public int hashCode()
public boolean equals(Object obj)
protected Object clone() throws CloneNotSupportedException.
public String toString()
public final void notify()
public final void notifyAll()

static methods stored in heap
ref variables stored in stack


garbage collection questions 

learn the concepts of java
learn about multi threading

jdk and jre


3 diff layers
class loader 
byte code execution

jit-just in time interpreter converts byte code to binary code
byte code verifier makes sure of security 
class loader-heap ad stack
method to explicitly incvoke garbage collector-system.gc
finalize()-clear 


byte num1=12
byte num2=40

byte=num1+num2(wrong becasue whenever 2 values are added, it should always be an int)
default is not compulsory in java

responsibilty for keeping classes from diff server separate-class loader

byte code verifier ensures byte code...
abstract class cannot be instantiated 

interface variables are public static and final by default
in java char=2 bytes(unicode )
in java primitives are always passed by value and not reference 

string str (null) 
str.lentgh(null pointer xception)

java enums are constants (true)
enum is for universal constant types
java enum is a special  kind of java class
java enum allwos to define a new method (true)
string buffer object is immitable(false)

new string "tanmay"
instance of string(true)

default value of float and double 0.0

any litearal is by default int

setter return type is void 

final modifier is with local variable

what are the wrapper classes we have 
do we have a wrapper calss called sort
which method helps to get current date and time-now()
instant class gives time stamp-long date
local date-date
local time-time
which method helps to create a custom retun type 
of()

of() is local return type

when does automatic type conversion happens-prototype conversion(type casting)

serialization in java
Serialization is a mechanism of converting the state of an object into a byte stream.

A Java virtual machine (JVM) is a virtual machine that enables a computer to run Java programs as well as 
programs written in other languages and compiled to Java bytecode.

reference this is never passed to static method-true
which method helps to distruct a method
can we apply this a super in your constructor-yes

which operator is used to add 2 different strings
which class relies on the sub class

in java variables can start with _,variable or $

equals and hash code are final(false)

******************************************************************************************************************
exception

the super most base class in exception is throwable
check exception-(In Java exceptions under Error and RuntimeException classes are unchecked exceptions, everything else under throwable is checked

EXCEPTION CLASS IS BY DEFAULT CHECKED 
error class is by default unchecked 

are the exceptions that are checked at compile time. If some code within a method throws a checked exception, then the method must either 
handle the exception or it must specify the exception using throws keyword.


are the exceptions that are not checked at compiled time. In C++, all exceptions are unchecked, so it is not forced by the compiler to either handle or 
specify the exception. It is up to the programmers to be civilized, and specify or catch the exceptions.

class not found exception ins checked exception


In Java exceptions under Error and RuntimeException classes are unchecked exceptions, everything else under throwable is checked.

array index out of bounds string exceotions-uncehcked

try block-try must need catch or finally
catch-to handle array index out of bound,io exception, exception,throwable
all exceptions are throable 
base class and derived class cannot stay in a single catch block
finally block 
if we say system.exit() then the object is delted from the jvm

in the overridden concept

which type of jdbc layer is faster and does not  
driver manager is the only one class
learn qustions related to prepared statement etc
which collection stores a key value pair-map
which collection stores a key value pair without duplicate-set
    and sorted-sorted map
collection to store dulipcate values but not sychronized-array list
which collection interface will help to store the duplicate value-list
which list interface class is sychronized-vector
which connection component does not accept duplicate value-hash set
no duplicate in fifo manner-hash set
which interface will help to sort your data-comparable
hash map stores null
hash table 
tree set 

learn difference between array list and tree set
a vector can use generics
what is the use of generics

what is the difference between advanced for loop and iterator

to insert delete and accept duplicate value-linked list
key 'value'-hash map
ordered unsorted duplicates notsorted-linked hash set

linked-ordered
collection index starts from-0
list does not allow duplicate entry-false

know what is class cast exception
hash table is sychronized and does not accept null values

comparable and comparator interface

****************
Import JDBC packages.

Load and register the JDBC driver.

Open a connection to the database.

Create a statement object to perform a query.

Execute the statement object and return a query resultset.

Process the resultset.

Close the resultset and statement objects.

Close the connection.

learn statement,prepared statement,callable statement

learn sytanx of jdbc

after result set, we must use rs.next
******************************************
types of jdbc odbc drivers

jdbc odbc driver
In a Type 1 driver, a JDBC bridge is used to access ODBC drivers installed on each client machine. Using ODBC, requires configuring on your system a Data Source Name (DSN) that represents the target database.

When Java first came out, this was a useful driver because most databases only supported ODBC access but now this type of driver is recommended only for experimental use or when no other alternative is available.



jdbc native api
In a Type 2 driver, JDBC API calls are converted into native C/C++ API calls, which are unique to the database. These drivers are typically provided by the database vendors and used in the same manner as the JDBC-ODBC Bridge. The vendor-specific driver must be installed on each client machine.

If we change the Database, we have to change the native API, as it is specific to a database and they are mostly obsolete now, but you may realize some speed increase with a Type 2 driver, because it eliminates ODBC's overhead



jdbc net pure java
In a Type 3 driver, a three-tier approach is used to access databases. The JDBC clients use standard network sockets to communicate with a middleware application server. The socket information is then translated by the middleware application server into the call format required by the DBMS, and forwarded to the database server.



100% pure java
In a Type 4 driver, a pure Java-based driver communicates directly with the vendor's database through socket connection. This is the highest performance driver available for the database and is usually provided by the vendor itself.



we can execute the parameterized query using which object?

callable statement returns the rows impacted-true
reslut set acts as an iterator
which object helps to access data from the table
-result set
